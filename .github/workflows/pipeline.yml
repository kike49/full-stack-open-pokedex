name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04
    env:
      NODE_ENV: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: install dependencies
        run: npm install --production=false
      - name: lint code
        run: npm run eslint
      - name: run tests
        run: NODE_ENV=development npm run test
      - name: build package
        run: npm run build
      # - name: e2e tests
      #   uses: cypress-io/github-action@v5
      #   with:
      #     command: npm run test:e2e
      #     start: npm run start-dev
      #     wait-on: http://localhost:5000
      - name: Deploy to Netlify
        if: ${{ github.event_name == 'push' }}
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 10

  tag_release:
    needs: [build-and-deploy]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
  runs-on: ubuntu-20.04
  needs: [build-and-deploy]
  if: success()
  steps:
    - name: Notify Discord on Success
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
        curl -H "Content-Type: application/json" -X POST -d '{
          "username": "Deployment Bot",
          "content": "A new version has been successfully deployed!",
          "embeds": [{
            "color": 3066993,
            "title": "Deployment Successful",
            "description": "A new version has been successfully deployed to production.",
            "fields": [
              {
                "name": "Commit",
                "value": "${{ github.sha }}",
                "inline": true
              },
              {
                "name": "Author",
                "value": "${{ github.actor }}",
                "inline": true
              }
            ]
          }]
        }' $DISCORD_WEBHOOK

  notify-failure:
    runs-on: ubuntu-20.04
    if: failure()
    steps:
      - name: Notify Discord on Failure
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "username": "Build Error Bot",
            "content": "Build failed!",
            "embeds": [{
              "color": 15158332,
              "title": "Build Failure",
              "description": "The build process has failed.",
              "fields": [
                {
                  "name": "Commit",
                  "value": "${{ github.sha }}",
                  "inline": true
                },
                {
                  "name": "Author",
                  "value": "${{ github.actor }}",
                  "inline": true
                },
                {
                  "name": "Commit Message",
                  "value": "${{ github.event.head_commit.message }}"
                },
                {
                  "name": "Branch",
                  "value": "${{ github.ref }}"
                },
                {
                  "name": "Logs",
                  "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                }
              ]
            }]
          }' $DISCORD_WEBHOOK